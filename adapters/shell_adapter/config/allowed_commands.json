{
  "allowed_commands": {
    "ubuntu": {
      "file_system": [
        {
          "command": "cd",
          "regex": "^cd(\\s+(\\.{1,2}(/\\.{1,2})*|[\\w./\\*-]+)?)?$"
        },
        {
          "command": "pwd",
          "regex": "^pwd(\\s+(-[PL]|--physical|--logical))?$"
        },
        {
          "command": "ls",
          "regex": "^ls(\\s+(-[a-zA-Z]+|--[a-zA-Z-]+))*(\\s+[\\w./\\*-]+)*$"
        },
        {
          "command": "cp",
          "regex": "^cp(?!\\s+.*-[a-zA-Z]*f)(\\s+(-[a-zA-Z]+|--[a-zA-Z-]+))*(\\s+[\\w./\\*-]+){2,}$"
        },
        {
          "command": "mv",
          "regex": "^mv(?!\\s+.*-[a-zA-Z]*f)(\\s+(-[a-zA-Z]+|--[a-zA-Z-]+))*(\\s+[\\w./\\*-]+){2,}$"
        },
        {
          "command": "rm",
          "regex": "^rm(?!\\s+(-[a-zA-Z]*[fr][a-zA-Z]*\\s+)+[\\*/\\.\\.])(\\s+(-[a-zA-Z]+|--[a-zA-Z-]+))*(\\s+[\\w./\\*-]+)+$"
        },
        {
          "command": "mkdir",
          "regex": "^mkdir(\\s+(-[a-zA-Z]+|--[a-zA-Z-]+))*(\\s+[\\w./\\*-]+)+$"
        },
        {
          "command": "rmdir",
          "regex": "^rmdir(\\s+(-[a-zA-Z]+|--[a-zA-Z-]+))*(\\s+[\\w./\\*-]+)+$"
        },
        {
          "command": "touch",
          "regex": "^touch(\\s+(-[a-zA-Z]+|--[a-zA-Z-]+))*(\\s+[\\w./\\*-]+)+$"
        },
        {
          "command": "file",
          "regex": "^file(\\s+(-[a-zA-Z]+|--[a-zA-Z-]+))*(\\s+[\\w./\\*-]+)+$"
        },
        {
          "command": "stat",
          "regex": "^stat(\\s+(-[a-zA-Z]+|--[a-zA-Z-]+))*(\\s+[\\w./\\*-]+)+$"
        },
        {
          "command": "du",
          "regex": "^du(?!\\s+--max-depth=[0-9]{3,})(\\s+(-[a-zA-Z]+|--max-depth=[0-9]{1,2}|--[a-zA-Z-]+))*(\\s+[\\w./\\*-]+)*$"
        },
        {
          "command": "df",
          "regex": "^df(\\s+(-[a-zA-Z]+|--[a-zA-Z-]+))*$"
        },
        {
          "command": "find",
          "regex": "^find(?!\\s+.*-exec)(?!\\s+.*-delete)(\\s+[\\w./\\*-]+)?(\\s+(-[a-zA-Z]+|--[a-zA-Z-]+)(\\s+[\\w./\\*-]+)?)*$"
        },
        {
          "command": "which",
          "regex": "^which(\\s+(-[a-zA-Z]+|--[a-zA-Z-]+))*(\\s+[\\w-]+)+$"
        },
        {
          "command": "whereis",
          "regex": "^whereis(\\s+(-[a-zA-Z]+|--[a-zA-Z-]+))*(\\s+[\\w-]+)+$"
        }
      ],
      "file_viewing": [
        {
          "command": "less",
          "regex": "^less(\\s+(-[a-zA-Z]+|--[a-zA-Z-]+))*(\\s+[\\w./\\*-]+)+$"
        },
        {
          "command": "more",
          "regex": "^more(\\s+(-[a-zA-Z]+|--[a-zA-Z-]+))*(\\s+[\\w./\\*-]+)+$"
        },
        {
          "command": "head",
          "regex": "^head(\\s+(-[0-9]+|-n\\s+[0-9]+|--lines=[0-9]+|--bytes=[0-9]+|--[a-zA-Z-]+))*(\\s+[\\w./\\*-]+)+$"
        },
        {
          "command": "tail",
          "regex": "^tail(\\s+(-[0-9]+|-n\\s+[0-9]+|--lines=[0-9]+|--bytes=[0-9]+|-f|--follow|--[a-zA-Z-]+))*(\\s+[\\w./\\*-]+)+$"
        },
        {
          "command": "grep",
          "regex": "^grep(?!\\s+.*-[a-zA-Z]*r)(?!\\s+.*--recursive)(\\s+(-[a-zA-Z]+|--[a-zA-Z-]+))*\\s+[\\w\\s\\*\\?\\[\\]\\(\\)\\.\\\\\\+\\^\\$\\|\\{\\},;:!@#%&_=<>'\"-]+(\\s+[\\w./\\*-]+)*$"
        },
        {
          "command": "egrep",
          "regex": "^egrep(?!\\s+.*-[a-zA-Z]*r)(?!\\s+.*--recursive)(\\s+(-[a-zA-Z]+|--[a-zA-Z-]+))*\\s+[\\w\\s\\*\\?\\[\\]\\(\\)\\.\\\\\\+\\^\\$\\|\\{\\},;:!@#%&_=<>'\"-]+(\\s+[\\w./\\*-]+)*$"
        },
        {
          "command": "fgrep",
          "regex": "^fgrep(?!\\s+.*-[a-zA-Z]*r)(?!\\s+.*--recursive)(\\s+(-[a-zA-Z]+|--[a-zA-Z-]+))*\\s+[\\w\\s\\*\\?\\[\\]\\(\\)\\.\\\\\\+\\^\\$\\|\\{\\},;:!@#%&_=<>'\"-]+(\\s+[\\w./\\*-]+)*$"
        },
        {
          "command": "sed",
          "regex": "^sed(?!\\s+.*-i)(?!\\s+.*--in-place)(\\s+(-[a-zA-Z]+|--[a-zA-Z-]+))*\\s+'[^']*'(\\s+[\\w./\\*-]+)*$"
        },
        {
          "command": "awk",
          "regex": "^awk(\\s+(-[a-zA-Z]+|--[a-zA-Z-]+))*\\s+'[^']*'(\\s+[\\w./\\*-]+)*$"
        },
        {
          "command": "cut",
          "regex": "^cut(\\s+(-[a-zA-Z]+|--[a-zA-Z-]+)(\\s+[\\w,]+)?)*(\\s+[\\w./\\*-]+)*$"
        },
        {
          "command": "paste",
          "regex": "^paste(\\s+(-[a-zA-Z]+|--[a-zA-Z-]+))*(\\s+[\\w./\\*-]+)+$"
        },
        {
          "command": "tr",
          "regex": "^tr(\\s+(-[a-zA-Z]+|--[a-zA-Z-]+))*\\s+'[^']*'\\s+'[^']*'$"
        },
        {
          "command": "sort",
          "regex": "^sort(\\s+(-[a-zA-Z]+|--[a-zA-Z-]+))*(\\s+[\\w./\\*-]+)*$"
        },
        {
          "command": "uniq",
          "regex": "^uniq(\\s+(-[a-zA-Z]+|--[a-zA-Z-]+))*(\\s+[\\w./\\*-]+)*$"
        },
        {
          "command": "diff",
          "regex": "^diff(\\s+(-[a-zA-Z]+|--[a-zA-Z-]+))*(\\s+[\\w./\\*-]+){2}$"
        },
        {
          "command": "cmp",
          "regex": "^cmp(\\s+(-[a-zA-Z]+|--[a-zA-Z-]+))*(\\s+[\\w./\\*-]+){2}$"
        },
        {
          "command": "comm",
          "regex": "^comm(\\s+(-[a-zA-Z]+|--[a-zA-Z-]+))*(\\s+[\\w./\\*-]+){2}$"
        },
        {
          "command": "wc",
          "regex": "^wc(\\s+(-[a-zA-Z]+|--[a-zA-Z-]+))*(\\s+[\\w./\\*-]+)*$"
        }
      ],
      "process_management": [
        {
          "command": "ps",
          "regex": "^ps(\\s+(-[aAdefHlmNOpPrsTuvwxZ]+|--[a-zA-Z-]+(=\\S+)?))*$"
        },
        {
          "command": "top",
          "regex": "^top(\\s+(-[bcHinoqsSuvwz]+|--[a-zA-Z-]+(=\\S+)?))*\\s*(-p\\s+[0-9]+(,[0-9]+)*)?$"
        },
        {
          "command": "htop",
          "regex": "^htop(\\s+(-[dChustp]+|--[a-zA-Z-]+(=\\S+)?))*$"
        },
        {
          "command": "pgrep",
          "regex": "^pgrep(\\s+(-[acfilnouvxP]+(\\s+\\S+)?|--[a-zA-Z-]+(=\\S+)?))*\\s+[\\w\\.-]+$"
        },
        {
          "command": "kill",
          "regex": "^kill(\\s+(-[sl]\\s+\\w+|--[a-zA-Z-]+(=\\S+)?))?\\s+[0-9]+(-[0-9]+)?(\\s+[0-9]+(-[0-9]+)?)*$"
        },
        {
          "command": "pkill",
          "regex": "^pkill(\\s+(-[signalflunovxP]+(\\s+\\S+)?|--[a-zA-Z-]+(=\\S+)?))*\\s+[\\w\\.-]+$"
        },
        {
          "command": "killall",
          "regex": "^killall(\\s+(-[eiqvwZsln]+(\\s+\\S+)?|--[a-zA-Z-]+(=\\S+)?))*\\s+[\\w\\.-]+(\\s+[\\w\\.-]+)*$"
        },
        {
          "command": "bg",
          "regex": "^bg(\\s+(%\\d+|\\d+))?$"
        },
        {
          "command": "fg",
          "regex": "^fg(\\s+(%\\d+|\\d+))?$"
        },
        {
          "command": "jobs",
          "regex": "^jobs(\\s+(-[lp]|--[a-zA-Z-]+))*(\\s+(%\\d+|\\d+))*$"
        },
        {
          "command": "nohup",
          "regex": "^nohup\\s+[\\w\\.-]+(\\s+(-[a-zA-Z0-9]+|--[a-zA-Z-]+(=\\S+)?|[\\w\\.-]+))*$"
        },
        {
          "command": "time",
          "regex": "^time(\\s+(-p|--[a-zA-Z-]+))*\\s+[\\w\\.-]+(\\s+(-[a-zA-Z0-9]+|--[a-zA-Z-]+(=\\S+)?|[\\w\\.-]+))*$"
        },
        {
          "command": "timeout",
          "regex": "^timeout(\\s+(-[kst]\\s+\\S+|--[a-zA-Z-]+(=\\S+)?))*\\s+[0-9]+(\\.[0-9]+)?\\s+[\\w\\.-]+(\\s+(-[a-zA-Z0-9]+|--[a-zA-Z-]+(=\\S+)?|[\\w\\.-]+))*$"
        },
        {
          "command": "watch",
          "regex": "^watch(\\s+(-[dtn]\\s*\\S*|--[a-zA-Z-]+(=\\S+)?))*\\s+[\\w\\.-]+(\\s+(-[a-zA-Z0-9]+|--[a-zA-Z-]+(=\\S+)?|[\\w\\.-]+))*$"
        }
      ],
      "system_information": [
        {
          "command": "uname",
          "regex": "^uname(\\s+(-[asnrvmpio]+|--[a-zA-Z-]+))*$"
        },
        {
          "command": "hostname",
          "regex": "^hostname$"
        },
        {
          "command": "uptime",
          "regex": "^uptime(\\s+(-[ps]|--[a-zA-Z-]+))*$"
        },
        {
          "command": "id",
          "regex": "^id(\\s+(-[GuZnr]+|--[a-zA-Z-]+))*$"
        },
        {
          "command": "groups",
          "regex": "^groups$"
        },
        {
          "command": "free",
          "regex": "^free(\\s+(-[bkmgthwlocs]+|--[a-zA-Z-]+))*$"
        },
        {
          "command": "vmstat",
          "regex": "^vmstat(\\s+(-[aSsmnwdt]+|--[a-zA-Z-]+))*(\\s+[0-9]+)?(\\s+[0-9]+)?$"
        },
        {
          "command": "iostat",
          "regex": "^iostat(\\s+(-[cdDhkNmntxyzV]+|--[a-zA-Z-]+))*(\\s+[0-9]+(\\.[0-9]+)?)?(\\s+[0-9]+)?$"
        },
        {
          "command": "lsof",
          "regex": "^lsof(\\s+(-[abChilnNOPRsStTuUvVxXFpMK]+|--[a-zA-Z-]+(=\\S+)?))*$"
        },
        {
          "command": "lspci",
          "regex": "^lspci(\\s+(-[knvxsADmM]+|--[a-zA-Z-]+(=\\S+)?))*$"
        },
        {
          "command": "lsusb",
          "regex": "^lsusb(\\s+(-[vdsStD]+|--[a-zA-Z-]+(=\\S+)?))*$"
        }
      ],
      "development_tools": [
        {
          "command": "git",
          "regex": "^git\\s+(status|log|show|diff|branch|checkout|add|commit|reset|revert|merge|rebase|cherry-pick|clean|ls-files|blame|grep|tag)(\\s+(-[a-zA-Z0-9]+|--[a-zA-Z-]+(=\\S+)?))*(\\s+[\\w./\\*@:,^~+-]+)*$"
        },
        {
          "command": "make",
          "regex": "^make(\\s+(-[a-zA-Z0-9]+|--[a-zA-Z-]+(=\\S+)?))*\\s*([\\w-]+(=[\\w./-]+)?)*$"
        },
        {
          "command": "cmake",
          "regex": "^cmake(\\s+(-[a-zA-Z0-9]+|--[a-zA-Z-]+(=\\S+)?))*\\s*(\\.\\.)?(\\s+-[DBGCSAT][\\w_]+(=[\\w./\\*:,^~+=-]+)?)*$"
        },
        {
          "command": "gcc",
          "regex": "^gcc(\\s+(-[a-zA-Z0-9]+|--[a-zA-Z-]+(=\\S+)?|(-I|-L|-D|-l|-o)\\s*[\\w./\\*-]+))*(\\s+[\\w./\\*-]+\\.([cCsS]|cpp|cxx))+$"
        },
        {
          "command": "g++",
          "regex": "^g\\+\\+(\\s+(-[a-zA-Z0-9]+|--[a-zA-Z-]+(=\\S+)?|(-I|-L|-D|-l|-o)\\s*[\\w./\\*-]+))*(\\s+[\\w./\\*-]+\\.(cpp|cxx|cc|C|c\\+\\+))+$"
        },
        {
          "command": "python",
          "regex": "^python[23]?(\\s+(-[a-zA-Z0-9]+|--[a-zA-Z-]+(=\\S+)?))*(\\s+[\\w./\\*-]+\\.py(\\s+([\\w./\\*-]+|--[\\w-]+(=[\\w./-]+)?))*)?$"
        },
        {
          "command": "perl",
          "regex": "^perl(\\s+(-[a-zA-Z0-9]+|--[a-zA-Z-]+(=\\S+)?))*(\\s+[\\w./\\*-]+\\.pl(\\s+([\\w./\\*-]+|--[\\w-]+(=[\\w./-]+)?))*)?$"
        },
        {
          "command": "gdb",
          "regex": "^gdb(\\s+(-[a-zA-Z0-9]+|--[a-zA-Z-]+(=\\S+)?))*(\\s+[\\w./\\*-]+)$"
        },
        {
          "command": "strace",
          "regex": "^strace(\\s+(-[a-zA-Z0-9]+|--[a-zA-Z-]+(=\\S+)?))*(\\s+[\\w./\\*-]+)(\\s+([\\w./\\*-]+|--[\\w-]+(=[\\w./-]+)?))*$"
        },
        {
          "command": "ltrace",
          "regex": "^ltrace(\\s+(-[a-zA-Z0-9]+|--[a-zA-Z-]+(=\\S+)?))*(\\s+[\\w./\\*-]+)(\\s+([\\w./\\*-]+|--[\\w-]+(=[\\w./-]+)?))*$"
        }
      ],
      "others": [
        {
          "command": "ip",
          "regex": "^ip(\\s+(addr|link|route|neigh|help)\\s+show)(\\s+(-[a-zA-Z0-9]+|--[a-zA-Z-]+(=\\S+)?))*(\\s+[\\w./\\*-]+)*$"
        },
        {
          "command": "ifconfig",
          "regex": "^ifconfig(\\s+(-[a-zA-Z]+))*(\\s+[\\w]+)?$"
        },
        {
          "command": "netstat",
          "regex": "^netstat(\\s+(-[aAeenlprstuvW]+|--[a-zA-Z-]+(=\\S+)?))*(\\s+[\\w]+)*$"
        },
        {
          "command": "ss",
          "regex": "^ss(\\s+(-[aAeenlprstuvW]+|--[a-zA-Z-]+(=\\S+)?))*(\\s+[\\w]+)*$"
        },
        {
          "command": "host",
          "regex": "^host(\\s+(-[aAdlrTtRvVw]+(\\s+\\S+)?|--[a-zA-Z-]+(=\\S+)?))*(\\s+[\\w.-]+)(\\s+[\\w.-]+)*$"
        },
        {
          "command": "dig",
          "regex": "^dig(\\s+(@[\\w.-]+))?(\\s+(-[a-zA-Z0-9]+(\\s+\\S+)?|\\+[a-zA-Z0-9]+(=\\S+)?|--[a-zA-Z-]+(=\\S+)?))*(\\s+[\\w.-]+)(\\s+[A-Z]+)?$"
        },
        {
          "command": "nslookup",
          "regex": "^nslookup(\\s+(-[a-zA-Z0-9]+(\\s+\\S+)?|--[a-zA-Z-]+(=\\S+)?))*(\\s+[\\w.-]+)(\\s+[\\w.-]+)*$"
        },
        {
          "command": "ping",
          "regex": "^ping(\\s+(-[aAbBdDfhLnOqrRUvV]+(\\s+\\S+)?|--[a-zA-Z-]+(=\\S+)?))*(\\s+-c\\s+\\d{1,3})?(\\s+-w\\s+\\d{1,3})?(\\s+[\\w.-]+)$"
        },
        {
          "command": "echo",
          "regex": "^echo(\\s+(-[a-zA-Z0-9]+))*(\\s+(['\"][^'\"]*['\"]|[^\\s]+))*$"
        },
        {
          "command": "set",
          "regex": "^set(\\s+(-[aefhkmnptuvxBCEHPT]+|\\+[aefhkmnptuvxBCEHPT]+|--[a-zA-Z-]+))*$"
        },
        {
          "command": "env",
          "regex": "^env(\\s+(-[a-zA-Z0-9]+|--[a-zA-Z-]+(=\\S+)?))*(\\s+[\\w]+=\\S+)*$"
        },
        {
          "command": "export",
          "regex": "^export(\\s+(-[a-zA-Z0-9]+|--[a-zA-Z-]+(=\\S+)?))*(\\s+[\\w]+(=\\S+)?)*$"
        },
        {
          "command": "printf",
          "regex": "^printf(\\s+['\"][^'\"]*['\"])(\\s+(['\"][^'\"]*['\"]|\\S+))*$"
        },
        {
          "command": "man",
          "regex": "^man(\\s+(-[a-zA-Z0-9]+|--[a-zA-Z-]+(=\\S+)?))*(\\s+[\\w.-]+)(\\s+[\\w.-]+)*$"
        },
        {
          "command": "info",
          "regex": "^info(\\s+(-[a-zA-Z0-9]+|--[a-zA-Z-]+(=\\S+)?))*(\\s+[\\w.-]+)*$"
        },
        {
          "command": "help",
          "regex": "^help(\\s+(-[a-zA-Z0-9]+|--[a-zA-Z-]+(=\\S+)?))*(\\s+[\\w.-]+)*$"
        },
        {
          "command": "type",
          "regex": "^type(\\s+(-[a-zA-Z0-9]+|--[a-zA-Z-]+(=\\S+)?))*(\\s+[\\w.-]+)+$"
        },
        {
          "command": "whatis",
          "regex": "^whatis(\\s+(-[a-zA-Z0-9]+|--[a-zA-Z-]+(=\\S+)?))*(\\s+[\\w.-]+)+$"
        }
      ]
    },
    "windows": {},
    "macos": {}
  }
}
